{"version":3,"sources":["logo.svg","components/input.jsx","components/login.jsx","components/navbar.jsx","components/addstory.jsx","components/storyid.jsx","components/showstory.jsx","components/create.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","className","htmlFor","name","label","value","onChange","id","type","error","Login","state","account","Email","Password","done","signup","errors","schema","Joi","string","required","email","tlds","allow","validate","result","abortEarly","console","log","details","item","path","message","handleSubmit","event","a","preventDefault","setState","Axios","post","process","URL","then","res","catch","err","alert","validateProperty","obj","handleChange","input","currentTarget","errorMessage","handleSignup","this","push","to","pathname","Fragment","onSubmit","disabled","onClick","Component","NavBar","Navbar","bg","variant","Nav","Link","href","Story","Title","Storyid","_id","all","handleClick","axios","get","match","params","data","Showstory","Storys","show","storyid","showStory","id1","ListGroup","map","Item","action","Create","Name","App","component","from","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9831a0a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nconst Input =(props)=>{\r\n    return(\r\n        <div className=\"form-group\">\r\n      <label htmlFor={props.name}>{props.label}</label>\r\n      <input\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        id={props.id}\r\n        name={props.name}\r\n        type={props.type}\r\n        className=\"form-control\"\r\n      />\r\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\r\n    </div>\r\n    );\r\n};\r\nexport default Input;","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    account: {\r\n      Email: \"\",\r\n      Password: \"\",\r\n    },\r\n    done:false,\r\n    signup:false,\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    Email: Joi.string().required().label(\"Email\").email({ tlds: { allow: false } }),\r\n    Password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  validate = () => {\r\n    const options = {\r\n      abortEarly: false,\r\n    };\r\n    const result = Joi.validate(this.state.account, this.schema, options);\r\n    console.log(result);\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    await Axios.post(process.env.URL+\"login\",this.state.account).then(res=>{\r\n        this.setState({done:true});\r\n    }).catch(err=>{\r\n        alert(\"Wrong credentials\")\r\n    })\r\n    {\r\n        \r\n    }\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    // console.log(obj);\r\n    const schema = { [name]: this.schema[name] };\r\n    // console.log(schema);\r\n    const result = Joi.validate(obj, schema);\r\n    console.log(result);\r\n    const { error } = result;\r\n    console.log(error);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const account = { ...this.state.account };\r\n    account[input.name] = input.value;\r\n    this.setState({ account, errors: errors || {} });\r\n  };\r\n  handleSignup=()=>{\r\n    this.setState({signup:true})\r\n  }\r\n  render() {\r\n    const { account } = this.state;\r\n    if(this.state.done)\r\n    {\r\n        return  <Redirect push to={{ pathname: '/allstory'}} />\r\n    }\r\n    else if(this.state.signup)\r\n    {\r\n        return  <Redirect push to={{ pathname: '/create'}} />\r\n    }\r\n    else{\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <h1>Login</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <Input\r\n              id=\"Email\"\r\n              name={\"Email\"}\r\n              label=\"E-Mail\"\r\n              type=\"email\"\r\n              value={account.Email}\r\n              onChange={this.handleChange}\r\n              error={this.state.errors.Email}\r\n            />\r\n            <Input\r\n              id=\"Password\"\r\n              name={\"Password\"}\r\n              label=\"Password\"\r\n              type=\"Password\"\r\n              value={account.Password}\r\n              onChange={this.handleChange}\r\n              error={this.state.errors.Password}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={this.validate()}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Login\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.handleSignup}\r\n            >\r\n              SignUp\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar,Nav } from 'react-bootstrap';\r\nimport{Link,NavLink} from 'react-router-dom';\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/allstory\">All Stories</Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport  NavBar  from \"./navbar\";\r\n\r\nclass Story extends Component {\r\n  state = {\r\n    account: {\r\n      Title: \"\",\r\n      Story: \"\",\r\n    },\r\n    done:false,\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    Title: Joi.string().required().label(\"Title\"),\r\n    Story: Joi.string().required().label(\"Story\"),\r\n  };\r\n\r\n  validate = () => {\r\n    const options = {\r\n      abortEarly: false,\r\n    };\r\n    const result = Joi.validate(this.state.account, this.schema, options);\r\n    console.log(result);\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    await Axios.post(process.env.URL+\"addstory\",this.state.account).then(res=>{\r\n        this.setState({done:true})\r\n        }).catch(err=>{\r\n            if(err)\r\n            {\r\n                alert(\"Something went wrong\");\r\n            }\r\n        })\r\n    \r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    // console.log(obj);\r\n    const schema = { [name]: this.schema[name] };\r\n    // console.log(schema);\r\n    const result = Joi.validate(obj, schema);\r\n    console.log(result);\r\n    const { error } = result;\r\n    console.log(error);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const account = { ...this.state.account };\r\n    account[input.name] = input.value;\r\n    this.setState({ account, errors: errors || {} });\r\n  };\r\n  render() {\r\n    const { account } = this.state;\r\n    if(this.state.done)\r\n    {\r\n      return  <Redirect push to={{ pathname: '/allstory'}} />\r\n    }\r\n    else{\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <NavBar/>\r\n          <h1>Add Story</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <Input\r\n              id=\"Title\"\r\n              name={\"Title\"}\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              value={account.Title}\r\n              onChange={this.handleChange}\r\n              error={this.state.errors.Title}\r\n            />\r\n            <Input\r\n              id=\"Story\"\r\n              name={\"Story\"}\r\n              label=\"Story\"\r\n              type=\"text\"\r\n              value={account.Story}\r\n              onChange={this.handleChange}\r\n              error={this.state.errors.Story}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={this.validate()}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Add Story\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Story;\r\n","import React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Story from \"./addstory\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { render } from \"@testing-library/react\";\r\nimport  NavBar  from \"./navbar\";\r\n\r\nclass Storyid extends Component {\r\n        \r\n       \r\n            state={\r\n                Story:{\r\n                    _id:\"\",\r\n                   \r\n                    Title:\"\",\r\n                    Story:\"\"\r\n                    \r\n                },\r\n                all:false,\r\n                \r\n            }\r\n                \r\n        \r\n        \r\n        \r\n        componentDidMount(){\r\n            \r\n            \r\n                   \r\n                        \r\n        console.log(this.props.id);\r\n            axios.get(process.env.URL+`story/${this.props.match.params.id}`)\r\n                .then(res=>{\r\n                    \r\n                const Story= res.data.Story;\r\n                this.setState({Story})\r\n            });\r\n            \r\n        }\r\n    //    componentWillUnmount(){\r\n    //        console.log(\"willunmount\");\r\n    //        this._ismount=true;\r\n    //        console.log(this._ismount);\r\n    //    }\r\n        handleClick=()=>{\r\n            this.setState({all:true})\r\n            \r\n        }\r\n    render(){\r\n        if(this.state.all)\r\n        {\r\n            return <Redirect push to={{ pathname: \"/allstory\" }} />;\r\n        }\r\n    return (\r\n      <div className=\"container\" >\r\n          <NavBar/>\r\n          \r\n    <h1>{this.state.Story.Title}</h1>\r\n        <p>{this.state.Story.Story}</p>\r\n        \r\n      </div>\r\n    );\r\n    }\r\n}\r\nexport default Storyid;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Story from \"./addstory\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Storyid from \"./storyid\";\r\nimport Navbar from \"./navbar\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Card,ListGroup,ListGroupItem} from \"react-bootstrap\";\r\n\r\nclass Showstory extends Component {\r\n  state = {\r\n    Storys: [],\r\n    done: false,\r\n    show: false,\r\n    storyid: \"\",\r\n  };\r\n  componentDidMount() {\r\n    axios.get(\"http://127.0.0.1:5000/allstory\").then((res) => {\r\n      console.log(res.data.Story);\r\n      const Storys = res.data.Story;\r\n      this.setState({ Storys });\r\n      console.log(Storys[0]._id);\r\n    });\r\n  }\r\n  handleClick = () => {\r\n    this.setState({ done: true });\r\n  };\r\n  showStory = (id1) => {\r\n    console.log(id1);\r\n    this.setState(\r\n      {\r\n        storyid: id1,\r\n        show: true,\r\n      },\r\n      () => {\r\n        console.log(this.state.storyid);\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    if (this.state.done) {\r\n      return <Redirect push to={{ pathname: \"/addstory\" }} />;\r\n    } else if (this.state.show) {\r\n      return (\r\n        <div>\r\n          {/* <Storyid id={this.state.storyid}/> */}\r\n          <Redirect push to={{ pathname: `/storyid/${this.state.storyid}` }} />;\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <Navbar />\r\n\r\n          <ListGroup>\r\n              {this.state.Storys.map((Story)=>(\r\n                  <ListGroup.Item action href=\"\" onClick={() => this.showStory(Story._id)}>\r\n                  {Story.Title}\r\n                  </ListGroup.Item>\r\n              ))}\r\n            \r\n            </ListGroup>\r\n\r\n          {/* <Card style={{ width: \"18rem\" }}>\r\n            <ListGroup variant=\"flush\">\r\n                {this.state.Storys.map((Story)=>(\r\n                    <ListGroup.Item>{Story.Title} <button onClick={() => this.showStory(Story._id)}>Show</button></ListGroup.Item>\r\n                ))}\r\n              \r\n\r\n            </ListGroup>\r\n          </Card> */}\r\n\r\n\r\n          {/* <ul>\r\n            {this.state.Storys.map((Story) => (\r\n              <li>\r\n                {Story.Title}\r\n                <button onClick={() => this.showStory(Story._id)}>Show</button>\r\n              </li>\r\n            ))}\r\n          </ul> */}\r\n          <button className=\"btn btn-primary\" onClick={this.handleClick}> Add Story</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Showstory;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport Showstory from \"./showstory\";\r\n\r\nclass Create extends Component {\r\n  state = {\r\n    account: {\r\n        Name:\"\",\r\n      Email: \"\",\r\n      Password: \"\",\r\n       },\r\n       done:false,\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    Name:Joi.string().required().label(\"Name\"),\r\n    Email: Joi.string().required().label(\"Email\").email({ tlds: { allow: false } }),\r\n    Password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  validate = () => {\r\n    const options = {\r\n      abortEarly: false,\r\n    };\r\n    const result = Joi.validate(this.state.account, this.schema, options);\r\n    console.log(result);\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    await Axios.post(\"https://storyapp-ankur.herokuapp.com/user\",this.state.account).then(res=>{\r\n        this.setState({done:true})\r\n        }).catch(err=>{\r\n            if(err)\r\n            {\r\n                alert(\"Already registered email id\");\r\n            }\r\n        })\r\n        \r\n    \r\n    \r\n    \r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    // console.log(obj);\r\n    const schema = { [name]: this.schema[name] };\r\n    // console.log(schema);\r\n    const result = Joi.validate(obj, schema);\r\n    console.log(result);\r\n    const { error } = result;\r\n    console.log(error);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const account = { ...this.state.account };\r\n    account[input.name] = input.value;\r\n    this.setState({ account, errors: errors || {} });\r\n  };\r\n  render() {\r\n    const { account } = this.state;\r\n    if(this.state.done===true)\r\n    {\r\n        return <Redirect push to={{ pathname: '/allstory'}} />\r\n    }\r\n    else{\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <h1>Create Your Account</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n          <Input\r\n              name={\"Name\"}\r\n              label=\"Name\"\r\n              type=\"text\"\r\n              value={account.Name}\r\n              onChange={this.handleChange}\r\n              error={this.state.errors.Name}\r\n            />\r\n            <Input\r\n              name={\"Email\"}\r\n              label=\"E-Mail\"\r\n              type=\"email\"\r\n              value={account.Email}\r\n              onChange={this.handleChange}\r\n              error={this.state.errors.Email}\r\n            />\r\n            <Input\r\n              id=\"password\"\r\n              name={\"Password\"}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={account.Password}\r\n              onChange={this.handleChange}\r\n              error={this.state.errors.Password}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={this.validate()}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Create Account\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Create;\r\n","import React from 'react';\nimport {Switch,Route,Redirect} from \"react-router-dom\";\nimport Login from \"./components/login\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Create from './components/create';\nimport Story from './components/addstory';\nimport Showstory from './components/showstory';\nimport Storyid from './components/storyid';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      \n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/create\" component={Create}/>\n      <Route path=\"/addstory\" component={Story}/>\n      <Route path=\"/allstory\" component={Showstory}/>\n      <Route path=\"/storyid/:id\" component={Storyid}/>\n      <Redirect from=\"/\" to=\"/login\" exact />\n    </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}